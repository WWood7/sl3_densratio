% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lrnr_density_ratio_kernel_demo.R
\docType{class}
\name{Lrnr_densratio_kernel}
\alias{Lrnr_densratio_kernel}
\title{Density Ratio Estimation Using Kernel-Based Methods}
\format{
\code{\link{R6Class}} object.
}
\value{
Learner object with methods for training and prediction. See \code{\link{Lrnr_base}} for documentation on learners.
}
\description{
This learner uses \code{\link[densratio]{densratio}} from \code{densratio} to conduct marginal density ratio estimation.
Can be used in \code{\link[sl3]{Pipeline}} to do conditional density ratio estimation.
}
\section{Parameters}{

\describe{
\item{\code{method='KLIEP'}}{The kernel method used. Support "KLIEP", "RuLSIF" and "uLSIF". See \code{\link[densratio]{densratio}}.
}
\item{\code{sigma='auto'}}{ A positive numeric vector as the search range of Gaussian kernel bandwidth. See \code{\link[densratio]{densratio}}.
}
\item{\code{lambda='auto'}}{A positive numeric vector as the search range of regularization parameter for uLSIF and RuLSIF. See \code{\link[densratio]{densratio}}.
}
\item{\code{alpha=0.1}}{A numeric in \link{0, 1}. Relative parameter for RuLSIF. See \code{\link[densratio]{densratio}}.
}
\item{\code{kernul_num=100}}{A positive integer, number of kernels. See \code{\link[densratio]{densratio}}.
}
\item{\code{fold=5}}{A positive integer, number of the folds of cross validation for getting bandwidth. See \code{\link[densratio]{densratio}}.
}
\item{\code{verbosed=TRUE}}{Verbose logical. See \code{\link[densratio]{densratio}}.
}
\item{\code{conditional_set=NULL}}{A vector of variable names that are contained in the conditional set. Should only be used in conditional density
ratio estimation.
}
}
}

\section{Examples}{

\describe{
\item{Marginal Density Estimation}{
Density ratio is not a variable that can be explicitly observed, so defining the \code{\link[sl3]{sl3_Task}} in this setting can be a little tricky.
To estimate density ratio in the form \eqn{f(x1, x2) / g(x1, x2)}, the covariates defined in the \code{\link[sl3]{sl3_Task}} should be (x1, x2), the outcome should
be a binary indicator that marks data points from the numerator distribution as 1 and denominator distribution as 0.

\itemize{
\item{define a task}: \code{task <- sl3_Task$new(data = dataset, covariate = c('x1', 'x2'), outcome = indicator_name)}
\item{define a learner}: \code{lr <- Lrnr_densratio_kernel$new(method = 'RuLSIF', kernel_num = 100, alpha = 0.8)}
}
}
\item{Conditional Density Estimation}{
To estimate density ratio in the form \eqn{f(x1 | x2) / g(x1 | x2) = f(x1, x2) / g(x1 , x2) / [f(x2) / g(x2)]},
it is doable to construct a \code{\link[sl3]{Pipeline}} with 2 densratio learners. In this case the second learner should
have a non-null \code{conditional_set} argument. The task should be defined in the same way as marginal density estimation.

\itemize{
\item{define a task}: \code{task <- sl3_Task$new(data = dataset, covariate = c('x1', 'x2'), outcome = indicator_name)}
\item{define a learner using \code{\link[sl3]{Pipeline}}}:
\itemize{
\item{} \code{
 lr1 <- Lrnr_densratio_kernel$new(method = 'RuLSIF', kernel_num = 100, alpha = 0.8, name = 'lr1')
 }
\item{}\code{
 lr2 <- Lrnr_densratio_kernel$new(method = 'uLSIF', kernel_num = 200, name = 'lr2', conditional_set = 'x2')}
\item{}\code{
 lr <- Pipeline$new(lr1, lr2)
 }
}
}
}
}
}

\section{Common Parameters}{


Individual learners have their own sets of parameters. Below is a list of shared parameters, implemented by \code{Lrnr_base}, and shared
by all learners.

\describe{
\item{\code{covariates}}{A character vector of covariates. The learner will use this to subset the covariates for any specified task}
\item{\code{outcome_type}}{A \code{\link{variable_type}} object used to control the outcome_type used by the learner. Overrides the task outcome_type if specified}
\item{\code{...}}{All other parameters should be handled by the invidual learner classes. See the documentation for the learner class you're instantiating}
}
}

\seealso{
Other Learners: 
\code{\link{Custom_chain}},
\code{\link{Lrnr_HarmonicReg}},
\code{\link{Lrnr_arima}},
\code{\link{Lrnr_bartMachine}},
\code{\link{Lrnr_base}},
\code{\link{Lrnr_bayesglm}},
\code{\link{Lrnr_bilstm}},
\code{\link{Lrnr_caret}},
\code{\link{Lrnr_cv_selector}},
\code{\link{Lrnr_cv}},
\code{\link{Lrnr_dbarts}},
\code{\link{Lrnr_define_interactions}},
\code{\link{Lrnr_density_discretize}},
\code{\link{Lrnr_density_hse}},
\code{\link{Lrnr_density_semiparametric}},
\code{\link{Lrnr_densratio_classification}},
\code{\link{Lrnr_earth}},
\code{\link{Lrnr_expSmooth}},
\code{\link{Lrnr_gam}},
\code{\link{Lrnr_ga}},
\code{\link{Lrnr_gbm}},
\code{\link{Lrnr_glm_fast}},
\code{\link{Lrnr_glmnet}},
\code{\link{Lrnr_glm}},
\code{\link{Lrnr_grf}},
\code{\link{Lrnr_gru_keras}},
\code{\link{Lrnr_gts}},
\code{\link{Lrnr_h2o_grid}},
\code{\link{Lrnr_hal9001}},
\code{\link{Lrnr_haldensify}},
\code{\link{Lrnr_hts}},
\code{\link{Lrnr_independent_binomial}},
\code{\link{Lrnr_lightgbm}},
\code{\link{Lrnr_lstm_keras}},
\code{\link{Lrnr_mean}},
\code{\link{Lrnr_multiple_ts}},
\code{\link{Lrnr_multivariate}},
\code{\link{Lrnr_nnet}},
\code{\link{Lrnr_nnls}},
\code{\link{Lrnr_optim}},
\code{\link{Lrnr_pca}},
\code{\link{Lrnr_pkg_SuperLearner}},
\code{\link{Lrnr_polspline}},
\code{\link{Lrnr_pooled_hazards}},
\code{\link{Lrnr_randomForest}},
\code{\link{Lrnr_ranger}},
\code{\link{Lrnr_revere_task}},
\code{\link{Lrnr_rpart}},
\code{\link{Lrnr_rugarch}},
\code{\link{Lrnr_screener_augment}},
\code{\link{Lrnr_screener_coefs}},
\code{\link{Lrnr_screener_correlation}},
\code{\link{Lrnr_screener_importance}},
\code{\link{Lrnr_sl}},
\code{\link{Lrnr_solnp_density}},
\code{\link{Lrnr_solnp}},
\code{\link{Lrnr_stratified}},
\code{\link{Lrnr_subset_covariates}},
\code{\link{Lrnr_svm}},
\code{\link{Lrnr_tsDyn}},
\code{\link{Lrnr_ts_weights}},
\code{\link{Lrnr_xgboost}},
\code{\link{Pipeline}},
\code{\link{Stack}},
\code{\link{define_h2o_X}()},
\code{\link{undocumented_learner}}
}
\concept{Learners}
\keyword{data}
